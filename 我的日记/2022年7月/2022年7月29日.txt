1、今天学习了二分搜索树和二分查找法。我在力扣做题的时候，时常也会遇到二分查找的题型，这种方法只能在有序数组(升序、降序)中运用。
为了找到目标值，我们要在一个while循环中，查看数组中间值，如果等于目标值则返回下标，如果大于目标值，则将较小的一半数组继续取中值，
如果小于目标值，则将较大的一半数组继续取中值，直到找到目标值或数组不能继续切分。如果是普通的遍历数组，时间复杂度是O(n)级的，而
二分查找法的时间复杂度是O(log n)级的，数组越大，其性能优势越明显。二分搜索树的性质是每个节点的左孩子都小于父节点，而右孩子都大于
父节点，这样我们在查找元素的时候也能做到O(log n)级别的时间复杂度，但是要注意的是，在一些极端情况下，比如一个二分搜索树中每个节点
只有左孩子或右孩子，这时候，这棵树其实就是链表，这个时候，查找元素的时间复杂度又变回了O(n)级。在这颗树中我们插入节点会首先从根
节点开始比较，如果更小就到左孩子继续比较，如果更大就到右孩子，最后成为某个叶子节点的左/右孩子。

2、今天学到的二分查找法，虽然我以前也用过，但是那是我自己写的，不够精简，老师写的代码效率更高，以后做题的时候可以参考。

3、明天计划：学习完二分搜索树所有章节。